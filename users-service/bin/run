#!/usr/bin/env node
const axios = require('axios');
const http = require('http');

const config = require('../config')[process.env.NODE_ENV || 'development'];

const log = config.log();
const service = require('../server/app')(config);

const server = http.createServer(service);

server.listen(process.env.PORT || 7003);

server.on('listening', () => {
  const registerService = () => axios.put(`http://registry-service:7001/register/${config.name}/${config.version}/${server.address().port}`);
  const unregisterService = () => axios.delete(`http://registry-service:7001/unregister/${config.name}/${config.version}/${server.address().port}`);

  registerService();

  const interval = setInterval(registerService, 20 * 1000);
  const cleanup = async () => {
    clearInterval(interval);
    await unregisterService();
  }

  process.on('uncaughtException', async(err) => {
    console.log('uncaughtException',err)
    await cleanup();
    process.exit(0);
  });

  process.on('SIGINT', async() => {
    console.log('SIGINT')

    await cleanup();
    process.exit(0);
  });

  process.on('SIGTERM', async() => {
    console.log('SIGTERM')

    await cleanup();
    process.exit(0);
  });


  log.info(
    `Listening on port ${server.address().port} in ${service.get('env')} mode.`,
  );
});
